{"version":3,"sources":["webpack:///./services/movies-api.js","webpack:///./initFilmPage.js","webpack:///./mainPage.js","webpack:///./initHeader.js","webpack:///./index.js"],"names":["axios","defaults","baseURL","key","initMoviePage","movie","document","querySelector","innerHTML","poster_path","title","vote_average","vote_count","popularity","original_title","overview","id","getMoviePage","initMainPage","app","page","query","refs","moviesList","buttonNext","buttonPrev","paginationBoxInfo","input","getTrendingMovies","classList","add","url","get","then","response","data","results","forEach","item","backdrop_path","console","log","API","films","reduce","acc","catch","err","textContent","addEventListener","remove","getMoviesByQuery","e","target","value","handleChange","closest","dataset","initHeader"],"mappings":"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","file":"main.ea58c1e2db3303122bd2.js","sourcesContent":["import axios from \"axios\";\n\naxios.defaults.baseURL = \"https://api.themoviedb.org\";\n\nconst key = \"684a168c8e7f797395d8a1d5291bcabb\";\n\nexport const fetchTrendingMovies = (page = 1) => {\n  const url = `/3/discover/movie?sort_by=popularity.desc&api_key=${key}&perPage=2language=en-US&page=${page}&&include_adult=false&total_results=12&total_pages=10`;\n  return axios.get(url).then(response => {\n    response.data.results.forEach(item => {\n      item.backdrop_path =\n        \"https://image.tmdb.org/t/p/w500\" + item.backdrop_path;\n    });\n    console.log(response.data.results[0]);\n    return response.data.results;\n  });\n};\n\nexport const fetchMovieByQuery = (query, page = 1) => {\n  const url = `/3/search/movie?api_key=${key}&language=en-US&query=${query}&page=${page}&include_adult=false`;\n  return axios.get(url).then(response => {\n    response.data.results.forEach(item => {\n      item.backdrop_path =\n        \"https://image.tmdb.org/t/p/w500\" + item.backdrop_path;\n    });\n    return response.data.results;\n  });\n};\n\nexport const fetchMoviesById = id => {\n  return axios\n    .get(`https://api.themoviedb.org/3/movie/${id}?api_key=${key}`)\n    .then(data => {\n      data.data.poster_path =\n        \"https://image.tmdb.org/t/p/w500\" + data.data.poster_path;\n      return data.data;\n    });\n};\n","const initMoviePage = movie => {\n  const getMoviePage = () => {\n    const {\n      poster_path,\n      title,\n      vote_average,\n      vote_count,\n      popularity,\n      original_title,\n      overview,\n      id\n    } = movie;\n    return `\n    <section class=\"section\" data-id=\"{id}\">\n      <div class=\"poster-wrapper\">\n        <img class=\"film-poster\" src=\"${poster_path}\" alt=\"poster image\" />\n      </div>\n      <div class=\"description-wrapper\">\n      <h2 class=\"film-title\">${title}</h2>\n      <div class=\"vote-wrapper\">\n        <span class=\"titles vote-titles\">vote / votes: </span>\n        <span class=\"votes-numbers\">${vote_average} / ${vote_count}</span>\n      </div>\n      <div class=\"popularity-wrapper\">\n        <span class=\"titles film-popularity\">popularity: </span>\n        <span class=\"popularity-score\">${popularity}</span>\n      </div>\n      <div class=\"original-film-wrapper\">\n        <span class=\"titles original-film-titles\">original title: </span>\n        <span class=\"original-film-name\">${original_title}</span>\n      </div>\n      <div class=\"film-genre-wrapper\">\n        <span class=\"titles film-genre\">genre: </span>\n        <span class=\"genre-list\">${\"genres\"}</span>\n      </div>\n      <h3>About</h3>\n      <p class=\"film-description\">\n        ${overview}\n      </p>\n      <div class=\"button-wrapper\">\n        <button type=\"button\" class=\"video-icon button-icon\" data-id=\"${id}\" data-action=\"watched-films\">Add to\n          watched</button>\n        <button type=\"button\" class=\"calendar-icon button-icon\" data-id=\"${id}\" data-action=\"queue-films\">Add to\n          queue</button>\n      </div> \n    </section>\n    `;\n  };\n\n  document.querySelector(\".js-main > .container\").innerHTML = getMoviePage();\n};\nexport default initMoviePage;\n","import * as API from \"./services/movies-api\";\nimport initMoviePage from \"./initFilmPage\";\n// import Layout from \"./Layout\";\nconst initMainPage = () => {\n  document.querySelector(\".js-main > .container\").innerHTML = `\n    <ul class=\"movies-list\" id=\"movies-list\"></ul>\n    <div class=\"pagination-box\">\n      <button class=\"pagination-box-button prev\">Prev</button>\n      <span class=\"pagination-box-info\"></span>\n      <button class=\"pagination-box-button next\">Next</button>\n    </div>\n    <button class=\"scrollTopButton\"></button>\n    `;\n  const app = {\n    page: 1,\n    query: \"\"\n  };\n  const refs = {\n    moviesList: document.querySelector(\"#movies-list\"),\n    buttonNext: document.querySelector(\".next\"),\n    buttonPrev: document.querySelector(\".prev\"),\n    paginationBoxInfo: document.querySelector(\".pagination-box-info\"),\n    input: document.querySelector(\".js-search-input\"),\n    moviesList: document.querySelector(\".movies-list\")\n  };\n\n  const getTrendingMovies = (page = app.page) => {\n    page === 1 ? refs.buttonPrev.classList.add(\"hiddenButton\") : null;\n    API.fetchTrendingMovies(page)\n      .then(data => {\n        const films = data.reduce((acc, item) => {\n          const { id, backdrop_path, title } = item;\n          return (acc += `\n          <li data-id=\"${id}\" class=\"movie\">\n            <img class=\"poster\" src=\"${backdrop_path}\" />\n            <h2 class=\"movie-title\">${title}</h2>\n            <div class=\"inner\"></div>\n            </li>\n          `);\n        }, \"\");\n\n        // .insertAdjacentHTML(\"beforeend\", films);\n        document.querySelector(\"#movies-list\").innerHTML = films;\n      })\n      .catch(err => console.log(err));\n    refs.paginationBoxInfo.textContent = page;\n  };\n  getTrendingMovies();\n\n  const handleNext = () => {\n    app.page = app.page + 1;\n    refs.buttonPrev.classList.remove(\"hiddenButton\");\n    if (app.query) {\n      getMoviesByQuery(app.query);\n      return;\n    }\n\n    getTrendingMovies(app.page);\n  };\n  const handlePrev = () => {\n    app.page = app.page - 1;\n    refs.buttonPrev.classList.remove(\"hiddenButton\");\n    app.page === 1 ? refs.buttonPrev.classList.add(\"hiddenButton\") : null;\n    if (app.query) {\n      getMoviesByQuery(app.query);\n      return;\n    }\n    getTrendingMovies(app.page);\n  };\n\n  refs.buttonNext.addEventListener(\"click\", handleNext);\n  refs.buttonPrev.addEventListener(\"click\", handlePrev);\n\n  const getMoviesByQuery = query => {\n    API.fetchMovieByQuery(query, app.page).then(data => {\n      const films = data.reduce((acc, item) => {\n        const { id, backdrop_path, title } = item;\n        return (acc += `\n            <li data-id=\"${id}\" class=\"movie\">\n              <img class=\"poster\" src=\"${backdrop_path}\" />\n              <h2 class=\"movie-title\">${title}</h2>\n              <div class=\"inner\"></div>\n              </li>\n            `);\n      }, \"\");\n      // .insertAdjacentHTML(\"beforeend\", films);\n      document.querySelector(\"#movies-list\").innerHTML = films;\n    });\n  };\n\n  const handleChange = e => {\n    app.query = e.target.value;\n    if (!app.query) {\n      getTrendingMovies(1);\n      return;\n    }\n    getMoviesByQuery(app.query);\n  };\n  refs.input.addEventListener(\"keyup\", e => {\n    handleChange(e);\n  });\n\n  refs.moviesList.addEventListener(\"click\", e => {\n    if (e.target.closest(\".movie\")) {\n      let filmId = e.target.closest(\".movie\").dataset.id;\n      API.fetchMoviesById(filmId).then(data => {\n        initMoviePage(data);\n      });\n    }\n  });\n};\n\nexport default initMainPage;\n","import initMainPage from \"./mainPage\";\nconst initHeader = () => {\n  document.querySelector(\".js-home\").addEventListener(\"click\", initMainPage);\n};\n\nexport default initHeader;\n","import \"./styles.css\";\nimport \"./mainPage\";\nimport initMainPage from \"./mainPage\";\nimport initMoviePage from \"./initFilmPage\";\nimport initHeader from \"./initHeader\";\ninitHeader();\ninitMainPage();\n"],"sourceRoot":""}
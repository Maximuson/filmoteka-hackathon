{"version":3,"sources":["webpack:///./services/movies-api.js","webpack:///./initFilmPage.js","webpack:///./mainPage.js","webpack:///./initWatched.js","webpack:///./initHeader.js","webpack:///./index.js"],"names":["axios","defaults","baseURL","key","fetchMoviesById","id","get","then","data","poster_path","backdrop_path","initMoviePage","movie","currentMovie","document","querySelector","style","display","watchedFilms","localStorage","getItem","JSON","parse","setItem","isFilmInWatched","some","item","innerHTML","title","vote_average","vote_count","popularity","original_title","overview","genres","results","fetchMovieTrailer","insertAdjacentHTML","reduce","acc","name","genresList","getMoviePage","watched","classList","remove","add","textContent","addEventListener","e","console","log","filteredList","filter","stringify","push","initMainPage","app","page","query","refs","moviesList","buttonNext","buttonPrev","paginationBoxInfo","input","getTrendingMovies","url","response","forEach","API","films","catch","err","getMoviesByQuery","target","value","handleChange","closest","filmId","dataset","initWatched","getWatchedMovies","initHeader"],"mappings":"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","file":"main.b6717c8a2deda25609dc.js","sourcesContent":["import axios from \"axios\";\n\naxios.defaults.baseURL = \"https://api.themoviedb.org\";\n\nconst key = \"684a168c8e7f797395d8a1d5291bcabb\";\n\nexport const fetchTrendingMovies = (page = 1) => {\n  const url = `/3/discover/movie?sort_by=popularity.desc&api_key=${key}&perPage=2language=en-US&page=${page}&&include_adult=false&total_results=12&total_pages=10`;\n  return axios.get(url).then(response => {\n    response.data.results.forEach(item => {\n      item.backdrop_path =\n        \"https://image.tmdb.org/t/p/w500\" + item.backdrop_path;\n    });\n    console.log(response.data.results[0]);\n    return response.data.results;\n  });\n};\n\nexport const fetchMovieByQuery = (query, page = 1) => {\n  const url = `/3/search/movie?api_key=${key}&language=en-US&query=${query}&page=${page}&include_adult=false`;\n  return axios.get(url).then(response => {\n    response.data.results.forEach(item => {\n      item.backdrop_path =\n        \"https://image.tmdb.org/t/p/w500\" + item.backdrop_path;\n    });\n    return response.data.results;\n  });\n};\n\nexport const fetchMoviesById = id => {\n  return axios\n    .get(`https://api.themoviedb.org/3/movie/${id}?api_key=${key}`)\n    .then(data => {\n      data.data.poster_path =\n        \"https://image.tmdb.org/t/p/w500\" + data.data.poster_path;\n      data.data.backdrop_path =\n        \"https://image.tmdb.org/t/p/w500\" + data.data.backdrop_path;\n      return data.data;\n    });\n};\n\nexport const fetchMovieTrailer = id => {\n  return axios\n    .get(`https://api.themoviedb.org/3/movie/${id}/videos?api_key=${key}`)\n    .then(data => data.data.results[0].key);\n};\n","import { fetchMovieTrailer } from \"./services/movies-api\";\n\nconst initMoviePage = movie => {\n  const currentMovie = movie;\n\n  const getMoviePage = () => {\n    const {\n      poster_path,\n      title,\n      vote_average,\n      vote_count,\n      popularity,\n      original_title,\n      overview,\n      genres,\n      id\n    } = movie;\n\n    const genresList = genres => {\n      return genres.reduce((acc, item) => {\n        return (acc += `<li class=\"genre-list--item\"><span>${item.name}</span></li>\\n`);\n      }, \"\");\n    };\n\n    const getMovieTrailer = () => {\n      fetchMovieTrailer(id).then(data => {\n        document.querySelector(\".js-main\").insertAdjacentHTML(\n          \"afterbegin\",\n          `\n            <iframe style=\"margin-bottom:50px\" width=\"100%\" height=\"450\" src=\"https://www.youtube.com/embed/${data}\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"\"></iframe>\n        `\n        );\n      });\n    };\n    getMovieTrailer();\n\n    return `\n    <div class=\"container\">\n\n    <section class=\"section\" data-id=\"{id}\">\n\n      <div class=\"poster-wrapper\">\n        <img class=\"film-poster\" src=\"${poster_path}\" alt=\"poster image\" />\n      </div>\n      <div class=\"description-wrapper\">\n      <h2 class=\"film-title\">${title}</h2>\n      <div class=\"vote-wrapper\">\n        <span class=\"titles vote-titles\">vote / votes: </span>\n        <span class=\"votes-numbers\">${vote_average} / ${vote_count}</span>\n      </div>\n      <div class=\"popularity-wrapper\">\n        <span class=\"titles film-popularity\">popularity: </span>\n        <span class=\"popularity-score\">${popularity}</span>\n      </div>\n      <div class=\"original-film-wrapper\">\n        <span class=\"titles original-film-titles\">original title: </span>\n        <span class=\"original-film-name\">${original_title}</span>\n      </div>\n      <div class=\"film-genre-wrapper\">\n        <span class=\"titles film-genre\">genre: </span>\n        <ul class=\"genre-list\">${genresList(genres)}</ul>\n      </div>\n      <h3>About</h3>\n      <p class=\"film-description\">\n        ${overview}\n      </p>\n      <div class=\"button-wrapper\">\n        <button type=\"button\" class=\"js-add-to-watched js-film-icon video-icon button-icon\" data-id=\"${id}\" data-action=\"watched-films\">Add to Library\n      </div>\n    </section>\n    </div>\n    `;\n  };\n  document.querySelector(\".searchWebsite\").style.display = \"none\";\n  let watchedFilms = localStorage.getItem(\"watched\");\n  if (!watchedFilms) {\n    watchedFilms = [];\n  } else {\n    watchedFilms = JSON.parse(watchedFilms);\n  }\n\n  if (!watchedFilms) {\n    localStorage.setItem(\"watched\", []);\n    watchedFilms = [];\n  }\n  let isFilmInWatched = watchedFilms.some(item => {\n    return item.id === currentMovie.id;\n  });\n  // MOVIE PAGE RENDER HERE\n  document.querySelector(\".js-main\").innerHTML = getMoviePage();\n  //\n  const watched = document.querySelector(\".js-film-icon\");\n  if (isFilmInWatched) {\n    watched.classList.remove(\"video-icon\");\n    watched.classList.add(\"video-icon-remove\");\n    watched.textContent = \"Remove from library\";\n  }\n  document.querySelector(\".js-add-to-watched \").addEventListener(\"click\", e => {\n    if (!isFilmInWatched) {\n      watchedFilms.push(currentMovie);\n      localStorage.setItem(\"watched\", JSON.stringify(watchedFilms));\n      watched.classList.remove(\"video-icon\");\n      watched.classList.add(\"video-icon-remove\");\n      watched.textContent = \"Remove from library\";\n      isFilmInWatched = true;\n    } else {\n      watched.classList.add(\"video-icon\");\n      watched.classList.remove(\"video-icon-remove\");\n      watched.textContent = \"Add to library\";\n      isFilmInWatched = false;\n      console.log(\"watched\");\n      const filteredList = watchedFilms.filter(item => {\n        return item.id !== currentMovie.id;\n      });\n      localStorage.setItem(\"watched\", JSON.stringify(filteredList));\n      watchedFilms = filteredList;\n    }\n  });\n\n  //   const addToWatch = function(event) {\n  //     if (event.target.classList.contains(\"video-icon\")) {\n  //       event.target.classList.remove(\"video-icon\");\n  //       event.target.classList.add(\"video-icon-remove\");\n  //       event.target.textContent = \"Remove from library\";\n  //     } else {\n  //       event.target.classList.add(\"video-icon\");\n  //       event.target.classList.remove(\"video-icon-remove\");\n  //       event.target.textContent = \"Add to library\";\n  //     }\n  //   };\n\n  //   watched.addEventListener(\"click\", addToWatch);\n};\n\nexport default initMoviePage;\n","import * as API from \"./services/movies-api\";\nimport initMoviePage from \"./initFilmPage\";\n// import Layout from \"./Layout\";\nconst initMainPage = () => {\n  document.querySelector(\".searchWebsite\").style.display = \"block\";\n  document.querySelector(\".js-main\").innerHTML = `\n  <div class=\"container\">\n    <ul class=\"movies-list\" id=\"movies-list\"></ul>\n    <div class=\"pagination-box\">\n      <button class=\"pagination-box-button prev\">Prev</button>\n      <span class=\"pagination-box-info\"></span>\n      <button class=\"pagination-box-button next\">Next</button>\n    </div>\n    <button class=\"scrollTopButton\"></button>\n    </div>\n    `;\n  const app = {\n    page: 1,\n    query: \"\"\n  };\n  const refs = {\n    moviesList: document.querySelector(\"#movies-list\"),\n    buttonNext: document.querySelector(\".next\"),\n    buttonPrev: document.querySelector(\".prev\"),\n    paginationBoxInfo: document.querySelector(\".pagination-box-info\"),\n    input: document.querySelector(\".js-search-input\"),\n    moviesList: document.querySelector(\".movies-list\")\n  };\n\n  const getTrendingMovies = (page = app.page) => {\n    page === 1 ? refs.buttonPrev.classList.add(\"hiddenButton\") : null;\n    API.fetchTrendingMovies(page)\n      .then(data => {\n        const films = data.reduce((acc, item) => {\n          const { id, backdrop_path, title } = item;\n          return (acc += `\n          <li data-id=\"${id}\" class=\"movie\">\n            <img class=\"poster\" src=\"${backdrop_path}\" />\n            <h2 class=\"movie-title\">${title}</h2>\n            <div class=\"inner\"></div>\n            </li>\n          `);\n        }, \"\");\n\n        // .insertAdjacentHTML(\"beforeend\", films);\n        document.querySelector(\"#movies-list\").innerHTML = films;\n      })\n      .catch(err => console.log(err));\n    refs.paginationBoxInfo.textContent = page;\n  };\n  getTrendingMovies();\n\n  const handleNext = () => {\n    app.page = app.page + 1;\n    refs.buttonPrev.classList.remove(\"hiddenButton\");\n    if (app.query) {\n      getMoviesByQuery(app.query);\n      return;\n    }\n\n    getTrendingMovies(app.page);\n  };\n  const handlePrev = () => {\n    app.page = app.page - 1;\n    refs.buttonPrev.classList.remove(\"hiddenButton\");\n    app.page === 1 ? refs.buttonPrev.classList.add(\"hiddenButton\") : null;\n    if (app.query) {\n      getMoviesByQuery(app.query);\n      return;\n    }\n    getTrendingMovies(app.page);\n  };\n\n  refs.buttonNext.addEventListener(\"click\", handleNext);\n  refs.buttonPrev.addEventListener(\"click\", handlePrev);\n\n  const getMoviesByQuery = query => {\n    API.fetchMovieByQuery(query, app.page).then(data => {\n      const films = data.reduce((acc, item) => {\n        const { id, backdrop_path, title } = item;\n        return (acc += `\n            <li data-id=\"${id}\" class=\"movie\">\n              <img class=\"poster\" src=\"${backdrop_path}\" />\n              <h2 class=\"movie-title\">${title}</h2>\n              <div class=\"inner\"></div>\n              </li>\n            `);\n      }, \"\");\n      // .insertAdjacentHTML(\"beforeend\", films);\n      document.querySelector(\"#movies-list\").innerHTML = films;\n    });\n  };\n\n  const handleChange = e => {\n    app.query = e.target.value;\n    if (!app.query) {\n      getTrendingMovies(1);\n      return;\n    }\n    getMoviesByQuery(app.query);\n  };\n  refs.input.addEventListener(\"keyup\", e => {\n    handleChange(e);\n  });\n\n  refs.moviesList.addEventListener(\"click\", e => {\n    if (e.target.closest(\".movie\")) {\n      let filmId = e.target.closest(\".movie\").dataset.id;\n      API.fetchMoviesById(filmId).then(data => {\n        initMoviePage(data);\n      });\n    }\n  });\n};\n\nexport default initMainPage;\n","import { fetchMoviesById } from \"./services/movies-api\";\nimport initMoviePage from \"./initFilmPage\";\n\nconst initWatched = () => {\n  document.querySelector(\".js-main\").innerHTML = `\n  <div class=\"container\">\n  <ul class=\"movies-list\" id=\"movies-list\"></ul>\n  <button class=\"scrollTopButton\"></button>\n  </div>\n  `;\n  const getWatchedMovies = () => {\n    let watchedFilms = localStorage.getItem(\"watched\");\n    if (!watchedFilms) {\n      watchedFilms = [];\n    } else {\n      watchedFilms = JSON.parse(watchedFilms);\n    }\n    if (!watchedFilms) {\n      localStorage.setItem(\"watched\", []);\n      watchedFilms = [];\n    }\n    const films = watchedFilms.reduce((acc, item) => {\n      const { id, backdrop_path, title } = item;\n      return (acc += `\n          <li data-id=\"${id}\" class=\"movie\">\n            <img class=\"poster\" src=\"${backdrop_path}\" />\n            <h2 class=\"movie-title\">${title}</h2>\n            <div class=\"inner\"></div>\n            </li>\n          `);\n    }, \"\");\n\n    // .insertAdjacentHTML(\"beforeend\", films);\n    document.querySelector(\"#movies-list\").innerHTML = films;\n\n    document.querySelector(\"#movies-list\").addEventListener(\"click\", e => {\n      if (e.target.closest(\".movie\")) {\n        let filmId = e.target.closest(\".movie\").dataset.id;\n        fetchMoviesById(filmId).then(data => {\n          initMoviePage(data);\n        });\n      }\n    });\n  };\n  getWatchedMovies();\n};\n\nexport default initWatched;\n","import initMainPage from \"./mainPage\";\nimport initWatched from \"./initWatched\";\nconst initHeader = () => {\n  document.querySelector(\".js-home\").addEventListener(\"click\", initMainPage);\n  document.querySelector(\".js-watched\").addEventListener(\"click\", initWatched);\n};\n\nexport default initHeader;\n","import \"./styles.css\";\nimport \"./mainPage\";\nimport initMainPage from \"./mainPage\";\nimport initMoviePage from \"./initFilmPage\";\nimport initHeader from \"./initHeader\";\ninitHeader();\ninitMainPage();\n"],"sourceRoot":""}